#!/bin/bash
#
# Create the cvmfs dist directory, downloading the latest rpms from
#   the three major sources.
# Written by Dave Dykstra 17 April 2019
#

usage()
{
    (
    echo "Usage: makedist [-s] [ -m machinetype ] {osg|egi|default}"
    echo "       makedist [-s] -o <self_extracting_script>"
    echo " The first usage creates a distribution in 'dist' directory."
    echo "   The -m option selects machinetype for the distribution."
    echo "   The default is the current machine.  Supported types:"
    echo "      rhel6-x86_64, rhel7-x86_64, rhel8-x86_64, suse15-x86_64"
    echo " The second usage puts 'dist' and cvmfsexec tools into one script with the"
    echo "   given file name that self extracts and executes cvmfsexec."
    echo "   After extraction, files are left behind under '.cvmfsexec' in the same"
    echo "   directory as the script."
    echo " The -s option makes both operations work for singcvmfs instead"
    echo "   of cvmfsexec, and files are left in .singcvmfs"
    ) >&2
    exit 1
}

SING=false
MACHTYPE=""
while true; do
    if [ "$1" = "-s" ]; then
        SING=true
        shift
    elif [ "$1" = "-m" ]; then
        MACHTYPE="$2"
        shift 2
    else
        break
    fi
done

distroname() {
    if [ -n "$MACHTYPE" ]; then
        echo "$MACHTYPE"|sed 's/[0-9].*//'
    elif [ -f /etc/os-release ]; then
        source /etc/os-release
        echo "${ID_LIKE/ */}"
    elif [ -f /etc/redhat-release ]; then
        echo "rhel"
    fi
}

distroversion() {
    if [ -n "$MACHTYPE" ]; then
        echo "$MACHTYPE"|sed 's/^[^0-9]*\([0-9]*\)-.*/\1/'
    elif [ -f /etc/os-release ]; then
        source /etc/os-release
        echo "${VERSION_ID/.*/}"
    elif [ -f /etc/redhat-release ]; then
        read LINE </etc/redhat-release
        case "$LINE" in
            *"release 6"*)
                echo "6"
                ;;
        esac
    fi
}

distroarch() {
    if [ -n "$MACHTYPE" ]; then
        echo "${MACHTYPE#*-}"
    else
        arch
    fi
}

DISTRO="`distroname`"
VERS="`distroversion`"
ARCH="`distroarch`"

EL=$VERS
if [ "$DISTRO" = "suse" ]; then
    EL=7  # we get some suse stuff from rhel7
fi

HERE="$(cd `dirname $0` && pwd)"

DIST="$HERE/dist"

DISTTYPE=""
case $1 in
    -o)
        if [ $# != 2 ]; then
            usage
        fi
        BASENAME=cvmfsexec
        TOOLS="cvmfsexec mountrepo umountrepo"
        SEDOPTS=""
        NEEDLIB=libfuse.so.2
        REQUIRES="makedist (without -s)"
        if $SING; then
            BASENAME=singcvmfs
            TOOLS="singcvmfs cvmfs2-wrapper"
            SEDOPTS="-e s/cvmfsexec/$BASENAME/"
            NEEDLIB=libfuse3.so.3
            REQUIRES="makedist -s"
        fi
        if [ ! -f $DIST/usr/lib*/$NEEDLIB ] && [ ! -f $DIST/lib*/$NEEDLIB ]; then
            echo "Must be run from where cvmfs distribution was made by $REQUIRES" >&2
            exit 1
        fi
        sed -e 's/^[ \t]*//' $SEDOPTS >$2 <<'!EOF!'
        #!/bin/bash
        BASEDIR="$(cd `dirname $0` && pwd)"
        BASE="$BASEDIR/.cvmfsexec"
        if [ $0 -nt $BASE ]; then
            rm -rf $BASE
            mkdir $BASE
            TAR_START="`awk '/^__TAR_BELOW__/ {print NR + 1; exit 0; }' $0`"
            tail -n+$TAR_START $0 | tar -xzf - -C $BASE
        fi
        exec $BASE/cvmfsexec "$@"
        __TAR_BELOW__
!EOF!
        tar --exclude 'dist/var/run/cvmfs/*' --exclude 'dist/var/lib/cvmfs/*' -czvf - -C $HERE $TOOLS dist >>"$2"
        chmod +x "$2"
        exit
        ;;
    osg)
        DISTTYPE=osg
        if [ "$EL" = 6 ]; then
            REL=3.4
        else
            REL=3.5
        fi
        URL="https://repo.opensciencegrid.org/osg/$REL/el$EL/release/$ARCH";;
    egi)
        DISTTYPE=egi
        if [ "$EL" = 6 ]; then
            OS=sl6
        else
            OS=centos$EL
        fi
        URL="http://repository.egi.eu/sw/production/umd/4/$OS/$ARCH/updates";;
    default)
        URL="http://cvmrepo.web.cern.ch/cvmrepo/yum/cvmfs/EL/$EL/$ARCH";;
    *) usage;;
esac

if [ -d $DIST ]; then
    echo "$DIST already exists" >&2
    exit 1
fi

SINGMSG=""
if $SING; then
    SINGMSG="singcvmfs "
fi
echo "Making $SINGMSG$DISTTYPE distribution for $DISTRO$VERS-$ARCH"

URLS=""
LIST="`curl -Ls $URL/|grep "cvmfs-"|sed 's/.*href="//;s/".*//'`"
PKGS="`echo "$LIST"|grep "^cvmfs-[0-9]"|tail -1`"
if [ -z "$PKGS" ]; then
    if [ "$DISTTYPE" = osg ] && [ "$EL" = 8 ]; then
        URL="`echo $URL|sed 's/release/testing/'`"
        LIST="`curl -Ls $URL/|grep "cvmfs-"|sed 's/.*href="//;s/".*//'`"
        PKGS="`echo "$LIST"|grep "^cvmfs-[0-9]"|tail -1`"
    fi
    if [ -z "$PKGS" ]; then
        echo "No cvmfs package found from $URL" >&2
        exit 1
    fi
fi

if [ "$DISTRO" = "suse" ]; then
    # now that we can figure out the latest cvmfs version, find the
    #   corresponding sle cvmfs package instead
    CVMFSVERSION="`echo "$PKGS"|sed 's/.*cvmfs-\([^-]*\)-.*/\1/'`"
    CVMFSURL="https://ecsft.cern.ch/dist/cvmfs/cvmfs-$CVMFSVERSION"
    URLS="$CVMFSURL/`curl -Ls $CVMFSURL/|grep "cvmfs-$CVMFSVERSION-.*sle.*\.$ARCH"|sed 's/.*href="//;s/".*//'|tail -1`"
    PKGS=""
fi

PKGS="$PKGS `echo "$LIST"|grep "^cvmfs-config-$1-[0-9]"|tail -1`"
PKGS="$PKGS `echo "$LIST"|grep "^cvmfs-x509-helper-[0-9]"|tail -1`"

FUSEPKGS=""
FUSE3EL=$EL
if [ "$EL" -eq 8 ]; then
    ELPATH=BaseOS/$ARCH/os
    # fuse3 moved from EPEL to the base OS in RHEL 8.1, but it's too
    #  old of a version :-(.  Use the EL7 packages instead.
    FUSE3EL=7
else
    ELPATH=os/$ARCH
fi
if $SING; then
    FUSEURL="http://download.fedoraproject.org/pub/epel/$FUSE3EL/$ARCH/Packages/f"
    CVMFSFUSE3="`echo "$LIST"|grep "^cvmfs-fuse3-[0-9]"|tail -1`"
    if [ -z "$CVMFSFUSE3" ]; then
        echo "No cvmfs-fuse3 package found from $URL" >&2
        exit 1
    fi
    PKGS="$PKGS $CVMFSFUSE3"
    FUSEPKGS="`curl -Ls $FUSEURL|grep fuse3-libs-[0-9].*$ARCH|sed 's/.*href="//;s/".*//'`"
    if [ -z "$FUSEPKGS" ]; then
        echo "No fuse3-libs package found from $FUSEURL" >&2
        exit 1
    fi
else
    if [ "$DISTRO" = suse ]; then
        FUSEURL="http://ewr.edge.kernel.org/opensuse/distribution/openSUSE-stable/repo/oss/x86_64"
        FUSELIB=libfuse2
    else
        if [ "$EL" -lt 8 ]; then
            FUSEURL="http://mirror.centos.org/centos-$EL/$EL/$ELPATH/Packages"
        elif [ "$EL" -eq 8 ]; then
            FUSEURL="https://download.rockylinux.org/pub/rocky/$EL/$ELPATH/Packages/f"
        else
            FUSEURL="http://mirror.stream.centos.org/$EL-stream/BaseOS/$arch/os/Packages"
            # Note: fuse3 not in 9-stream yet so this is just a placeholder
        fi
        FUSELIB=fuse-libs
    fi
    FUSEPKGS="`curl -Ls $FUSEURL|grep $FUSELIB-[0-9].*$ARCH|sed 's/.*href="//;s/".*//'|grep -v 32bit`"
    if [ -z "$FUSEPKGS" ]; then
        echo "No $FUSELIB package found from $FUSEURL" >&2
        exit 1
    fi
fi

for PKG in $PKGS; do
    URLS="$URLS $URL/$PKG"
done
for PKG in $FUSEPKGS; do
    URLS="$URLS $FUSEURL/$PKG"
done

mkdir -p $DIST/etc
cd $DIST

# make an os-release subset for repository configs that need that,
#  in particular for osgstorage-auth.conf
cat >etc/os-release <<!EOF!
ID_LIKE="$DISTRO"
VERSION_ID="$VERS"
!EOF!

for U in $URLS; do
    echo "Extracting $U into $DIST"
    curl -Ls "$U"|rpm2cpio -|cpio -idmv -f "*/.build-id*"
done
find * -type l|while read LINK; do
    LINKDEST="`readlink $LINK`"
    if [ "${LINKDEST:0:1}" = "/" ]; then
        # turn full path symlink target into relative path
        NEWDEST="$(echo $(dirname $LINK)|sed 's,[^/]*,..,g')$LINKDEST"
        echo "$LINK -> $NEWDEST"
        rm -f $LINK
        ln -s $NEWDEST $LINK
    fi
done

echo "./etc/cvmfs/default.local"
(echo 'CVMFS_HTTP_PROXY="auto;DIRECT"'
if [ "$DISTTYPE" = osg ]; then
    WLCGPACS="http://cernvm-wpad.fnal.gov/wpad.dat;http://cernvm-wpad.cern.ch/wpad.dat"
else
    WLCGPACS="http://cernvm-wpad.cern.ch/wpad.dat;http://cernvm-wpad.fnal.gov/wpad.dat"
fi
echo "CVMFS_PAC_URLS=\"http://grid-wpad/wpad.dat;http://wpad/wpad.dat;$WLCGPACS\""
) >etc/cvmfs/default.local
